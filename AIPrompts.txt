Evaluate each aspect of the solution with these key questions:

Does the analysis directly address the problem?

Were all possible causes considered, or are there unassessed factors?

Is this the simplest and most direct solution?

Is it feasible in terms of resources and costs?

Will the solution have the expected impact, and is it sustainable?

Are there ways to simplify or improve the solution?

What are the essential requirements versus those that are just a plus?

Show me the minimal reproducible example.

What edge cases should we consider?

What testing approach would validate this solution?

If you identify ambiguities, suggest clarifying questions and, if possible, offer improvement alternatives.

---

I prompted Claude to give me a list of possible solutions without overengineering and keeping it simple

Then I asked Claude to estimate the possibility of these solutions being correct as well as an estimate on the lines of code needed for each.

Then I systematically asked it to provide the solution for each suggestion.


---

<evaluation_framework>
  <core_analysis>
    <problem_alignment>
      Does the analysis directly address the problem at hand?
    </problem_alignment>
    
    <cause_analysis>
      Have all possible causes been considered, or are there unassessed factors?
    </cause_analysis>
    
    <solution_efficiency>
      Is this the simplest and most direct path to solving the problem?
    </solution_efficiency>
    
    <feasibility>
      Is the solution feasible given available resources and costs?
    </feasibility>
    
    <impact_assessment>
      Will the solution achieve the expected impact and remain sustainable?
    </impact_assessment>
  </core_analysis>

  <optimization>
    <improvement_potential>
      What opportunities exist to simplify or improve the solution?
    </improvement_potential>
    
    <requirements_analysis>
      Which requirements are essential versus nice-to-have features?
    </requirements_analysis>
    
    <minimal_example>
      Provide the minimal reproducible example that demonstrates the solution.
    </minimal_example>
    
    <edge_cases>
      What edge cases need to be considered and handled?
    </edge_cases>
    
    <validation>
      What testing approach would effectively validate this solution?
    </validation>
  </optimization>

  <clarification>
    <ambiguity_handling>
      If ambiguities are found:
      1. List specific clarifying questions
      2. Suggest potential improvement alternatives
    </ambiguity_handling>
  </clarification>
</evaluation_framework>


